{"version":3,"sources":["webpack:///src/app/home/home.module.ts","webpack:///src/app/home/home.page.ts","webpack:///src/app/home/home.page.html"],"names":["HomePageModule","forChild","path","component","imports","declarations","HomePage","zone","geolocation","address","diningItems","geocoder","google","maps","Geocoder","GoogleAutocomplete","places","AutocompleteService","autocomplete","input","autocompleteItems","markers","map","Map","mapElement","nativeElement","center","lat","lng","zoom","tryGeolocation","getPlacePredictions","predictions","status","run","forEach","prediction","push","item","geocode","place_id","results","position","geometry","location","marker","Marker","mypos","formatted_address","setCenter","getCurrentPosition","then","resp","pos","coords","latitude","longitude","title","error","console","log","FindGeoCode","service","PlacesService","getDetails","placeId","nearbySearch","radius","types","near_places","i","length","updateSearchResults","updatePosition","carrepairfinder","selector","templateUrl","styleUrls"],"mappings":"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","file":"home-home-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { IonicModule } from '@ionic/angular';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\n\nimport { HomePage } from './home.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RouterModule.forChild([\n      {\n        path: '',\n        component: HomePage\n      }\n    ])\n  ],\n  declarations: [HomePage]\n})\nexport class HomePageModule {}\n","import { Component, AfterContentInit,OnInit,ViewChild,NgZone } from '@angular/core';\nimport { Geolocation } from '@ionic-native/geolocation/ngx';\ndeclare var google;\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.page.html',\n  styleUrls: ['home.page.scss'],\n})\nexport class HomePage implements OnInit, AfterContentInit {\n  mypos;\n  address=\"PadrÃ£o\"; \n  place_id; \n  map;\n  diningItems = [];\n\n  geocoder = new google.maps.Geocoder;\n  GoogleAutocomplete = new google.maps.places.AutocompleteService();\n  autocomplete = { input: '' };\n  autocompleteItems = [];\n  markers = [];\n  @ViewChild('mapElement',{static:true}) mapElement;\n  ngOnInit(): void{\n\n  }\n  ngAfterContentInit():void{  \n    this.map = new google.maps.Map(this.mapElement.nativeElement, \n    {\n        center: { lat: -34.9011, lng: -56.1645 },\n        zoom: 15\n    });\n    this.tryGeolocation(); \n  }\n  constructor(private zone: NgZone,private geolocation: Geolocation) {}\n\n  updateSearchResults(){\n    if (this.autocomplete.input == '') {    \n      this.autocompleteItems = [];\n      return;\n    }\n    this.GoogleAutocomplete.getPlacePredictions({ input: this.autocomplete.input },\n    (predictions, status) => {\n      this.autocompleteItems = [];\n      this.zone.run(() => {\n        predictions.forEach((prediction) => {  \n          this.autocompleteItems.push(prediction);   \n        });\n      });\n    });\n  }\n  selectSearchResult(item){\n    this.autocompleteItems = [];\n    this.geocoder.geocode({'placeId': item.place_id}, (results, status) => {  \n      if(status === 'OK' && results[0]){\n        let position = {     \n            lat: results[0].geometry.location.lat,\n            lng: results[0].geometry.location.lng\n        };\n        let marker = new google.maps.Marker({\n          position: results[0].geometry.location,\n          map: this.map,\n        });\n        this.mypos = position;  \n        this.place_id = item.place_id; \n        this.address = results[0].formatted_address;\n        this.markers.push(marker);\n        this.map.setCenter(results[0].geometry.location);\n      }\n    })\n    \n  }\n  tryGeolocation(){  \n    this.geolocation.getCurrentPosition().then((resp) => {\n      let pos = {\n        lat: resp.coords.latitude,\n        lng: resp.coords.longitude\n      };\n      let marker = new google.maps.Marker({  \n        position: pos,\n        map: this.map,\n        title: 'I am here!'\n      });\n      this.markers.push(marker);\n      this.map.setCenter(pos);\n      this.mypos = pos;\n    }).catch((error) => {\n      console.log('Error getting location', error);\n    });\n    this.FindGeoCode();\n  }\n  FindGeoCode(){\n    this.geocoder.geocode({'location': this.mypos}, (results, status) => {  \n      if(status === 'OK' && results[0]){\n        this.place_id = results[0].place_id;\n      }\n    });\n  }\n  updatePosition(){\n    let service = new google.maps.places.PlacesService(this.map);\n    service.getDetails(\n      {placeId: this.place_id},\n        (results, status) =>{\n          console.log(results.formatted_address);\n          this.address = results.formatted_address;\n        }\n   );\n  console.log(this.place_id);\n  console.log(this.diningItems);\n  }\n  carrepairfinder(){\n    this.autocompleteItems = [];\n    let service = new google.maps.places.PlacesService(this.map);\n    this.geocoder.geocode({'placeId': this.place_id}, (results, status) => {\n      if(status === 'OK' && results[0]){\n        this.autocompleteItems = [];\n        service.nearbySearch({\n          location: results[0].geometry.location,\n          radius: '500',\n          types: ['car_repair'],\n        }, (near_places) => {\n            this.zone.run(() => {\n              this.diningItems = [];\n              for (var i = 0; i < near_places.length; i++) {\n                this.diningItems.push(near_places[i]);\n              }\n          });\n        })\n      }\n    })\n  }\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-title >\n      Google Busca: Oficinas\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content [fullscreen]=\"true\">\n  <ion-header collapse=\"condense\" >\n    <ion-toolbar color=\"primary\">\n      <ion-title size=\"large\">Google Busca: Oficinas</ion-title>\n    </ion-toolbar>\n  </ion-header>\n  <ion-header>\n    <ion-toolbar>\n      <ion-searchbar [(ngModel)]=\"autocomplete.input\" (ionInput)=\"updateSearchResults()\" placeholder=\"Buscar por um lugar\"></ion-searchbar>\n    </ion-toolbar>\n  </ion-header>\n  <ion-list [hidden]=\"autocompleteItems.length == 0\">  \n    <ion-item *ngFor=\"let item of autocompleteItems\" tappable (click)=\"selectSearchResult(item)\">\n      {{ item.description }}\n    </ion-item>\n  </ion-list>\n  <div #mapElement class='map'></div>  <!--Mostra o Mapa-->\n  <ion-list>\n    <ion-button (click)=\"tryGeolocation()\">Minha localizaÃ§Ã£o</ion-button>\n    <ion-button (click)=\"updatePosition()\">Atualizar</ion-button>\n    <ion-list>\n      <ion-label ngDefaultControl [(ngModel)]=\"address\">{{address}}</ion-label>\n    </ion-list>\n    <ion-button (click)=\"carrepairfinder()\">Buscar por Oficinas</ion-button>\n    <ion-list [hidden]=\"diningItems.length == 0\">  \n      <ion-item *ngFor=\"let item of diningItems\" tappable (click)=\"selectSearchResult(item)\"> <!--Mostra resultado-->\n        {{ item.name }}\n      </ion-item>\n    </ion-list>\n  </ion-list>\n\n</ion-content>\n"]}